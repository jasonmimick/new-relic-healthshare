<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="NewRelic.EnsUtils">
<Description>
Set of utilities to extract metrics out of Ensemble to be sent to New Relic
</Description>
<Super>NewRelic.Base</Super>
<TimeCreated>63341,52785.946298</TimeCreated>

<Parameter name="VERSION">
<Type>%String</Type>
<Default>0.0.1</Default>
</Parameter>

<Method name="MessageCount">
<Description>
Returns the number of messages and errors organized by SoureConfigName
since "fromTimestamp" which should be of the form: 2014-06-04 13:46:07
</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>fromTimestamp</FormalSpec>
<Implementation><![CDATA[
	set result = ##class(%ZEN.proxyObject).%New()
	set msgData=##class(%ListOfObjects).%New()
	set result.timestamp = fromTimestamp
	set result.namespace = $namespace
	set rs=##class(%ResultSet).%New("%DynamicQuery:SQL")
	set sc=rs.Prepare("select DISTINCT SessionId from Ens.MessageHeader where TimeCreated > ? ")		
	set sc=rs.Execute(fromTimestamp)
	while ( rs.Next() ) {
		set header = ##class(Ens.MessageHeader).%OpenId( rs.Get("SessionId") )
		set name = header.SourceConfigName
		set count = $i(data( name, "message_count" ))
		set data( name, "message_count" ) = count
		if ( header.IsError ) {
			set count=$i(data( name, "errors" ))
			set data( name, "errors" ) = count
		} 
	}
		
	set name=$order( data("") )
	while ( name '= "" ) {
		set md = ##class(%ZEN.proxyObject).%New()
		set md.SourceConfigName = name
		set md.MessageCount = data(name,"message_count")
		set md.ErrorCount = $get(data(name,"error_count"),0)
		do msgData.Insert(md)
		set name=$order( data(name) )
	}
	set result.MessageCounts = msgData
	return result
]]></Implementation>
</Method>
</Class>
</Export>
